// schema.prisma

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ----------------
// ENUMS
// ----------------

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
  REFUNDED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}

enum DiscountType {
  FIXED
  PERCENTAGE
}

// ----------------
// MODELS
// ----------------

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(CUSTOMER)
  carts     Cart[]
  orders    Order[]
  reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Address Address[]
}

model Category {
  id          String     @id @default(uuid())
  name        String     @unique
  description String?
  parent      Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  parentId    String?
  children    Category[] @relation("CategoryToCategory")
  products    Product[]
}

model Product {
  id                String      @id @default(uuid())
  name              String
  description       String?
  sku               String      @unique
  price             Float
  stock             Int         @default(0)
  lowStockThreshold Int         @default(5)
  featured          Boolean     @default(false)
  discount          Float?
  category          Category?   @relation(fields: [categoryId], references: [id])
  categoryId        String?
  images            Image[]
  orderItems        OrderItem[]
  cartItems         CartItem[]
  reviews           Review[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
  @@index([price])
  @@index([categoryId])
  @@index([featured])
}

model Image {
  id        String  @id @default(uuid())
  url       String
  altText   String?
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}

model Cart {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String     @unique
  cartItems CartItem[]
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(uuid())
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
}

model Address {
  id             String  @id @default(uuid())
  user           User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String?
  fullName       String
  line1          String
  line2          String?
  city           String
  state          String
  postalCode     String
  country        String
  phone          String?
  ordersShipping Order[] @relation("OrderShippingAddress")
  ordersBilling  Order[] @relation("OrderBillingAddress")
}

model Order {
  id                String        @id @default(uuid())
  user              User          @relation(fields: [userId], references: [id])
  userId            String
  orderItems        OrderItem[]
  totalAmount       Float
  shippingAddress   Address       @relation("OrderShippingAddress", fields: [shippingAddressId], references: [id], onDelete: Cascade)
  shippingAddressId String
  billingAddress    Address       @relation("OrderBillingAddress", fields: [billingAddressId], references: [id], onDelete: Cascade)
  billingAddressId  String
  paymentMethod     String
  paymentStatus     PaymentStatus @default(PENDING)
  orderStatus       OrderStatus   @default(PENDING)
  shippingCost      Float         @default(0.0)
  taxAmount         Float         @default(0.0)
  coupons           Coupon[]      @relation("OrderCoupons")
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  @@index([userId])
  @@index([orderStatus])
}

model OrderItem {
  id         String  @id @default(uuid())
  order      Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId    String
  product    Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  String
  unitPrice  Float
  quantity   Int
  totalPrice Float
}

model Review {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  rating    Int
  comment   String?
  createdAt DateTime @default(now())

  @@unique([productId, userId])
  @@index([rating])
}

model Coupon {
  id            String       @id @default(uuid())
  code          String       @unique
  description   String?
  discountType  DiscountType
  discountValue Float
  validFrom     DateTime
  validUntil    DateTime
  usageLimit    Int?
  usedCount     Int          @default(0)
  orders        Order[]      @relation("OrderCoupons")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@index([validUntil])
}

model HomepageSettings {
  id                   String @id @default("default")
  heroTitle            String @default("Cutting-Edge")
  heroSubtitle         String @default("Electronics")
  heroDescription      String @default("Discover the latest in technology with premium devices designed for the modern lifestyle.")
  heroPrimaryBtnText   String @default("Shop Now")
  heroPrimaryBtnLink   String @default("/home/products")
  heroSecondaryBtnText String @default("View Deals")
  heroSecondaryBtnLink String @default("/home/deals")
  heroBackgroundImage  String @default("/placeholder.svg?height=400&width=400")
  heroGradientStart    String @default("#0f172a")
  heroGradientEnd      String @default("#1e3a8a")

  dealsBannerTitle   String  @default("Summer Savings Spectacular")
  dealsBannerTagline String  @default("Flash Sale")
  dealsBannerDesc    String  @default("Up to 40% off on selected electronics. Limited time offer!")
  dealsBannerBtnText String  @default("Shop Now")
  dealsBannerBtnLink String  @default("/home/deals")
  dealsBannerBgColor String  @default("#3b82f6")
  dealsBannerBgImage String  @default("/placeholder.svg?height=400&width=1200")
  dealsBannerActive  Boolean @default(true)

  showFeaturedCategories Boolean @default(true)
  showFeaturedProducts   Boolean @default(true)
  showNewArrivals        Boolean @default(true)

  updatedAt DateTime @updatedAt
}
